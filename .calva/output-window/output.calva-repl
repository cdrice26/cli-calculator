; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ‚ô•Ô∏è

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/caleb/Development/Command-Line Calculator/calculator; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:60312 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
cljÍûâcalculator.coreÍûâ>¬†
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
cljÍûâcalculator.coreÍûâ>¬†
; Jack-in done.
cljÍûâcalculator.coreÍûâ>¬†
#'calculator.core/-main
cljÍûâcalculator.coreÍûâ>¬†
; Running tests for the following namespaces:
;   calculator.core-test

; No tests found. üò±, ns: 0, vars: 0
cljÍûâcalculator.core-testÍûâ>¬†
; Running tests for the following namespaces:
;   calculator.core-test

; No tests found. üò±, ns: 0, vars: 0
cljÍûâcalculator.core-testÍûâ>¬†
; Running tests for the following namespaces:
;   calculator.core-test

; No tests found. üò±, ns: 0, vars: 0
cljÍûâcalculator.core-testÍûâ>¬†

cljÍûâcalculator.core-testÍûâ>¬†
; Running tests for the following namespaces:
;   calculator.core-test

; No tests found. üò±, ns: 0, vars: 0
cljÍûâcalculator.core-testÍûâ>¬†
#'calculator.core/-main
cljÍûâcalculator.coreÍûâ>¬†
#'calculator.core-test/test-calculate
cljÍûâcalculator.core-testÍûâ>¬†
; Running tests for the following namespaces:
;   calculator.core-test

; 43 tests finished, all passing üëç, ns: 1, vars: 14
cljÍûâcalculator.core-testÍûâ>¬†
#'calculator.core/-main
cljÍûâcalculator.coreÍûâ>¬†
; Running tests for the following namespaces:
;   calculator.core-test

; ERROR in calculator.core-test/test-calculate (core.clj:73):
; error: java.lang.ClassCastException: class clojure.lang.LazySeq cannot be cast to class clojure.lang.IPersistentVector (clojure.lang.LazySeq and clojure.lang.IPersistentVector are in unnamed module of loader 'app') (core.clj:73)
; expected:
(= 20.0 (c/calculate "sqrt(4) + 3 + 3 * 5"))

; ERROR in calculator.core-test/test-calculate (core.clj:74):
; error: java.lang.ClassCastException: class clojure.lang.LazySeq cannot be cast to class clojure.lang.IPersistentVector (clojure.lang.LazySeq and clojure.lang.IPersistentVector are in unnamed module of loader 'app') (core.clj:74)
; expected:
(= 400.0 (c/calculate "100 * sqrt(16)"))

; ERROR in calculator.core-test/test-unchain (core.clj:64):
; error: java.lang.ClassCastException: class clojure.lang.LazySeq cannot be cast to class clojure.lang.IPersistentVector (clojure.lang.LazySeq and clojure.lang.IPersistentVector are in unnamed module of loader 'app') (core.clj:64)
; expected:
(= [3 :add [5 :mult [:abs 3]]] (c/unchain [3 :add 5 :mult :abs 3]))

; 43 tests finished, problems found. üò≠ errors: 3, failures: 0, ns: 1, vars: 14
cljÍûâcalculator.core-testÍûâ>¬†
#'calculator.core/-main
cljÍûâcalculator.coreÍûâ>¬†
; Running tests for the following namespaces:
;   calculator.core-test

; 43 tests finished, all passing üëç, ns: 1, vars: 14
cljÍûâcalculator.core-testÍûâ>¬†
#'calculator.core/-main
cljÍûâcalculator.coreÍûâ>¬†
#'calculator.core/-main
cljÍûâcalculator.coreÍûâ>¬†
; Running tests for the following namespaces:
;   calculator.core-test

; 43 tests finished, all passing üëç, ns: 1, vars: 14
cljÍûâcalculator.core-testÍûâ>¬†
